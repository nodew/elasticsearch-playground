@baseURL = http://localhost:9200

# Document api

## Index

### Create a document
PUT {{baseURL}}/twitter/_doc/1 HTTP/1.1
Content-Type: application/json

{
    "user" : "kimchy",
    "post_date" : "2009-11-15T14:12:12",
    "message" : "trying out Elasticsearch"
}

### Create via op_type
PUT {{baseURL}}/twitter/_doc/2?op_type=create
Content-Type: application/json

{
    "user" : "kimchy",
    "post_date" : "2009-11-15T14:12:12",
    "message" : "trying out Elasticsearch"
}

### Create via _create
PUT {{baseURL}}/twitter/_create/1 HTTP/1.1
content-type: application/json

{
    "user" : "kimchy",
    "post_date" : "2009-11-15T14:12:12",
    "message" : "trying out Elasticsearch"
}

### Automatic ID generation via post
POST {{baseURL}}/twitter/_doc/ HTTP/1.1
Content-Type: application/json

{
    "user" : "kimchy",
    "post_date" : "2009-11-15T14:12:12",
    "message" : "trying out Elasticsearch"
}

### Routing
POST {{baseURL}}/twitter/_doc?routing=kimchy HTTP/1.1
Content-Type: application/json

{
    "user" : "kimchy",
    "post_date" : "2009-11-15T14:12:12",
    "message" : "trying out Elasticsearch"
}

## Get

### Get document via ID
GET {{baseURL}}/twitter/_doc/1 HTTP/1.1

### Source filter
GET {{baseURL}}/twitter/_doc/1?_source=false HTTP/1.1

### Source filter
GET {{baseURL}}/twitter/_doc/1?_source_includes=message&_source_excludes=entities HTTP/1.1

### Fields mapping
PUT {{baseURL}}/fieldsmappingdemo HTTP/1.1
Content-Type: application/json

{
   "mappings": {
       "properties": {
          "counter": {
             "type": "integer",
             "store": false
          },
          "tags": {
             "type": "keyword",
             "store": true
          }
       }
   }
}

### Create document
PUT {{baseURL}}/fieldsmappingdemo/_doc/1 HTTP/1.1
Content-Type: application/json

{
    "counter" : 1,
    "tags" : ["red"]
}

### Get via stored fields, and only leaf fileds can be returned via stored_fields
GET {{baseURL}}/fieldsmappingdemo/_doc/1?stored_fields=counter,tags

## Update

## Delete